// <auto-generated />
using System;
using Ganaderia.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ganaderia.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20211015022406_Incial1")]
    partial class Incial1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Ganaderia.App.Dominio.Farm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AmountOfSpecimen")
                        .HasColumnType("int");

                    b.Property<int?>("AssignedVetId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Latitud")
                        .HasColumnType("real");

                    b.Property<float>("Longitud")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RancherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssignedVetId");

                    b.HasIndex("RancherId");

                    b.ToTable("Farms");
                });

            modelBuilder.Entity("Ganaderia.App.Dominio.Herd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AmountOfSpecimen")
                        .HasColumnType("int");

                    b.Property<int?>("FarmId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.ToTable("Herds");
                });

            modelBuilder.Entity("Ganaderia.App.Dominio.Pathology", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClinicalSigns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SpecimenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpecimenId");

                    b.ToTable("Pathologies");
                });

            modelBuilder.Entity("Ganaderia.App.Dominio.Specimen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Age")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Breed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HerdId")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HerdId");

                    b.ToTable("Specimens");
                });

            modelBuilder.Entity("Ganaderia.App.Dominio.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CitizenID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityOfResidence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("Ganaderia.App.Dominio.Vaccine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Lab")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SpecimenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpecimenId");

                    b.ToTable("Vaccines");
                });

            modelBuilder.Entity("Ganaderia.App.Dominio.Rancher", b =>
                {
                    b.HasBaseType("Ganaderia.App.Dominio.User");

                    b.Property<int>("AmountOfFarms")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Rancher");
                });

            modelBuilder.Entity("Ganaderia.App.Dominio.Vet", b =>
                {
                    b.HasBaseType("Ganaderia.App.Dominio.User");

                    b.Property<string>("ProfessionalID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Speciality")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Vet");
                });

            modelBuilder.Entity("Ganaderia.App.Dominio.Farm", b =>
                {
                    b.HasOne("Ganaderia.App.Dominio.Vet", "AssignedVet")
                        .WithMany()
                        .HasForeignKey("AssignedVetId");

                    b.HasOne("Ganaderia.App.Dominio.Rancher", null)
                        .WithMany("Farms")
                        .HasForeignKey("RancherId");

                    b.Navigation("AssignedVet");
                });

            modelBuilder.Entity("Ganaderia.App.Dominio.Herd", b =>
                {
                    b.HasOne("Ganaderia.App.Dominio.Farm", null)
                        .WithMany("Herds")
                        .HasForeignKey("FarmId");
                });

            modelBuilder.Entity("Ganaderia.App.Dominio.Pathology", b =>
                {
                    b.HasOne("Ganaderia.App.Dominio.Specimen", null)
                        .WithMany("Pathologies")
                        .HasForeignKey("SpecimenId");
                });

            modelBuilder.Entity("Ganaderia.App.Dominio.Specimen", b =>
                {
                    b.HasOne("Ganaderia.App.Dominio.Herd", null)
                        .WithMany("Specimens")
                        .HasForeignKey("HerdId");
                });

            modelBuilder.Entity("Ganaderia.App.Dominio.Vaccine", b =>
                {
                    b.HasOne("Ganaderia.App.Dominio.Specimen", null)
                        .WithMany("Vaccines")
                        .HasForeignKey("SpecimenId");
                });

            modelBuilder.Entity("Ganaderia.App.Dominio.Farm", b =>
                {
                    b.Navigation("Herds");
                });

            modelBuilder.Entity("Ganaderia.App.Dominio.Herd", b =>
                {
                    b.Navigation("Specimens");
                });

            modelBuilder.Entity("Ganaderia.App.Dominio.Specimen", b =>
                {
                    b.Navigation("Pathologies");

                    b.Navigation("Vaccines");
                });

            modelBuilder.Entity("Ganaderia.App.Dominio.Rancher", b =>
                {
                    b.Navigation("Farms");
                });
#pragma warning restore 612, 618
        }
    }
}
